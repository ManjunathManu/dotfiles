set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'w0rp/ale'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-surround'
Plugin 'gko/vim-coloresque'
Plugin 'leafgarland/typescript-vim'
Plugin 'valloric/youcompleteme'
Plugin 'scrooloose/nerdcommenter'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" Put your non-Plugin stuff after this line

" ******************** VIM Options ********************
let mapleader=" " " Change leader key to <space>
set number
set relativenumber
set ttimeoutlen=10
set mouse=a
set tabstop=2 shiftwidth=2 expandtab
:highlight Normal ctermfg=black ctermbg=white
set wildignore+=**/node_modules/** "Ignore node_modules folder in vimgrep search

" ******************** Key Binding ********************
:imap jj <Esc> " Press jj to exit insert mode
" Auto Complete quotes and parens
inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O

" Cause > to autocomplete tag
" ><CR> to auotcomplete and put cursor in new line
" ><Leader> to cancel autocompletion for this time
" Only in HTML, JavaScript and XML files
function s:CompleteTags()
  inoremap <buffer> > ></<C-x><C-o><Esc>:startinsert!<CR><C-O>?</<CR>
  inoremap <buffer> ><Leader> >
  inoremap <buffer> ><CR> ></<C-x><C-o><Esc>:startinsert!<CR><C-O>?</<CR><CR><Tab><CR><Up><C-O>$
endfunction
autocmd BufRead,BufNewFile *.html,*.js,*.xml call s:CompleteTags()

" ******************** air-line ********************
let g:airline_powerline_fonts = 1

" ******************** Nerd-tree ********************
" autocmd vimenter * NERDTree " Open nerd tree by default
nmap <F6> :NERDTreeToggle<CR> " Toggle nerd tree
nmap <F7> :NERDTreeFind<CR> " Reveal current file in nerd tree
let g:NERDTreeMouseMode=3

" ******************** Ctrl p ********************
let g:ctrlp_custom_ignore = 'node_modules' " Exclude node_modules during search

autocmd BufNewFile,BufRead *.ts setlocal filetype=typescript

if !exists("g:ycm_semantic_triggers")
  let g:ycm_semantic_triggers = {}
endif
let g:ycm_semantic_triggers['typescript'] = ['.']
set completeopt-=preview

" ************************* ALE *********************************
nmap <leader>d <Plug>(ale_go_to_definition)
nmap <leader>f <Plug>(ale_fix)
nmap <leader>r <Plug>(ale_find_references)
nmap <leader>h <Plug>(ale_hover)
let g:ale_fixers = {
      \   '*': ['remove_trailing_lines', 'trim_whitespace'],
      \   'javascript': ['eslint'],
      \   'typescript': ['tslint'],
      \   'html': ['htmlhint'],
      \   'css': ['prettier'],
      \   'scss': ['prettier']
      \ }

" Set this variable to 1 to fix files when you save them.
let g:ale_fix_on_save = 1
" Dont run linter on text change
" let g:ale_lint_on_text_changed = 'never'
" Enable completion where available.
" This setting must be set before ALE is loaded.
" let g:ale_completion_enabled = 1

" ******************* NERD Commenter *******************************
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
